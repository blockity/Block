package ie.gmit.dip;

public class Help {

	public void railFenceCypher() {
		System.out.println("The Rail Fence is a transposition cypher, "
				+ "where the letters of a plaintext are rearranged using\n" + "a pattern to encrypt a message. "
				+ "The Rail Fence cypher has roots in antiquity, where the ancient\n"
				+ "Greeks used a device called a scytale (pronounced skit-ally) to encrypt military communications.\n"
				+ "It was also used by both the Union and Confederate forces during the US Civil War (1861-65)\n"
				+ "to send Morse encoded messages by telegraph.\n"
				+ "Seen below is the message STOPTHEMATTHECASTLEGATES");

		System.out.println("s■■■■■■■a■■■■■■■t■■■■■■■■");
		System.out.println("■t■■■■■m■t■■■■■s■l■■■■■s■");
		System.out.println("■■o■■■e■■■t■■■a■■■e■■■e■■");
		System.out.println("■■■p■h■■■■■h■c■■■■■g■t■■■");
		System.out.println("■■■■t■■■■■■■e■■■■■■■a■■■■");
	}

	public void key() {
		System.out.println("The key is an integer representing the number of rows in the encryption matrix.\n"
				+ "Seen below is a key of 5.");
		System.out.println("1    ■■■■■■■ ■■■■■■■ ");
		System.out.println("2   ■ ■■■■■ ■ ■■■■■ ■");
		System.out.println("3   ■■ ■■■ ■■■ ■■■ ■■");
		System.out.println("4   ■■■ ■ ■■■■■ ■ ■■■");
		System.out.println("5   ■■■■ ■■■■■■■ ■■■■");
	}

	public void offset() {
		System.out.println("The offset is an integer representing the row to start the encryption from.\n"
				+ "Seen below is an offset of 3.");
		System.out.println("    ■■■■■■ ■■■■■■■ ■");
		System.out.println("    ■■■■■ ■ ■■■■■ ■■");
		System.out.println("3    ■■■ ■■■ ■■■ ■■■");
		System.out.println("    ■ ■ ■■■■■ ■ ■■■■");
		System.out.println("    ■■ ■■■■■■■ ■■■■■");
	}

	public void encrypt() {
		System.out.println(
				"The Rail Fence cypher encrypts plaintext by creating an n x k matrix of characters, where n is\n"
						+ "the length of the plaintext and k is the key. The plain-text characters are written into the matrix\n"
						+ "in a zigzag pattern and resultant cypher-text is created by appending the set of characters in\n"
						+ "each row to a string.");
	}

	public void decrypt() {
		System.out.println("The decryption of a message requires that the columnar transposition is undone, i.e. that\n"
				+ "the original encryption matrix is re-created. This can be performed by reading each character\n"
				+ "into a n x k matrix using a zigzag pattern and filling each row in turn. ");
	}

	public void somebody() {
		System.out.println(
				"                                                  *,..,*..,,,.**/*/(*(((,,*,                                             \n"
						+ "                                                *,/.**/(*/(/(*#%%(/*(##(((##%(*                                         \n"
						+ "                                     ,,.,.,/,///(#&#(/%#&&*((,(**/,(,#/%((&&&@%%%#,,*                                   \n"
						+ "                                 ,,.,/*/(#,,*/*#((#(@&&&&&&&&%&@###**#***/***%(#&@&%/,,,                                \n"
						+ "                              ,,,*/((/((#*#%#%####%%&&&%&&&&&@@@%(%((/(*#(*,//,(//##%&#,*,,,                            \n"
						+ "                            ,,.**.*(//((/**((((#/#&%&&&%%&&&&&&@@%##,*(#/%%#%****,,..*/*(*(/*,                          \n"
						+ "                            */((*(//(%/((..,*,*#//#&%%&&%&@&@&@&@&%%(*#(,/,(%(##/*,..**/,*/**#**,                      \n"
						+ "                           *(((#(###%#,,,*//,//&#(#%&&%&&%&@&&@@&&&&&%#((,,.*%//%(%(//((*#/,/*,//,                      \n"
						+ "                      ,,/,##(((#*%&%*,/##//#,,*(%(&%%%@&#&&@%&@&&@#%&%#/(#//,*%/*%%(/&%/%#%#(////*,                     \n"
						+ "                    *,*#*#/*#%/&%%#*##(/(%(*,,//(&&%&&&&%%&&&&%%@&#&&&&&#/*/**/%#(&(*,/,/##%#%###//,                    \n"
						+ "                   .**((#/,/#%%@%#(%#/*(#/##&&%%#%%%(#&(&&&&&%%&#&%&(@@&&#/#,(##/(*##(*,,*/((%%/#%/(*,                  \n"
						+ "                   ,*/%((#(%%%*#(##((#(**((/##%%#%/(%&#&&&%##%/####//(#%&&&*,,,%(#&((%////*.(%%##%%((*                  \n"
						+ "                  ,*/((#*/(*(,((%%//,,*%#(%%%/#%#%%&&&&%%***##,#(/(/**,(&%&#//**%((/&%#&(/#(,/###&%%%/,                 \n"
						+ "                ,*/(##%/*#*.,((/#,***((#%#*//%#*##&((#((*,*,(*.*,(((*,,,*##%%*,(*#/@&#%&%%%#&%*#%%&#&&((                \n"
						+ "               .,*(###((,...*/(/#*/,/(##(/(&**(#%#*,(**,.*.,//(//,**..,//##*(*,*(#(#&&&&%#&&&#%(#&&###/,,               \n"
						+ "             ,*.*,####,**,.*#/%#(/*(/(((%##(##(*#*,,,*,..*,,/(/,.,,....,,#%((#/,,*##&%#%&%&&@&%&*&&%%%#,,               \n"
						+ "              ,.**&##,#.,,##*%##(%,/((/#(%#%/**,(,,*.....**/%*,,*.,,,,,,,,,##(*,(#*(#%&(#%&&@&&(%&%#&%(*                \n"
						+ "             .,,/%%%(#*,*/(*%%#%%%/,*(#(#%#*,*,,//*...../*##,.....,.....,,,**#%/%(%##*#&&(#%&&&&&&&&&%%#*,,             \n"
						+ "            .,,*//#,(#/(,(#(&&&#(/(%((##/##(*,........**.##,..............,,,,*#(&&&(&%%/&%%&%&&&(%@&%%%/**,            \n"
						+ "             ,,*##((%#(/*###%&(#%##(#(**,,#(#,......,/,,.&/,..,,,.....,.,,,,,,,,/*#&&&%#&#%#&&%%%@&@&%&%&#/,            \n"
						+ "             ,,*%&#%&%#%((#%%&#(%%#///*,,,//#,,......*,.,,*,,... ... ..........,,,,/#&#&%%&%&&@%&&@&%&%%(((,            \n"
						+ "             ,*/%&((#&#/((((/&&#%%//**,,,,.,.................................,,.,..**(#&&%%&&&&&%%@@@&%&#*/,            \n"
						+ "             ,*(/%&&%/**(,(/#%(&%&(/,,,............. . ........................,....,//#%&&&%&@&&&%&&&%#(/*,            \n"
						+ "            ,,(#%%%&&/##&##&/#*&%#/(*/*((#/%%%(#(#/**,,,....,,,....,./*(#(%##%%#(/((//(%%%%&%%&&%@&&&&&%#*,,,,          \n"
						+ "             ,,#%#%##(#%#%%###(&/&(%%####%&%%#%@@&%@%#&#(/*.,*,,*##%%%&%&&&%%##&@&%%&&%%#&%&&@&@&&&&&&@&#/**,,          \n"
						+ "             ,/(((%(/#%%%%%%%.,,.(/#&%(/,%/*(#&&&%*(&%%#//***,,,*%&&@&#(#%%(((((%%(/&%&%#&%&&&@&&@&%&@%%%#****,         \n"
						+ "             ,#/#(%###%%#&%%%...,(*#(.(..*/**//(%&%%%/&(/****/((#(&&(/&#%##/((#%%((#%/@&%##%@@&%&%&@&@&%%#*,**          \n"
						+ "           ,*,###,(#%(%#&%&&#...*/(*#((%#/#&@&%#((&##(*%*,/,,,,*(&@/#&#%@@%&@@@@%%(#((*&%%@@&&&%&%@&&%@&&(*,,           \n"
						+ "           .*(/#%((#%%##%@#%%%#%**@*#%%&%(%&@&@/(&%%//,&,*....../#&(#(****%%%(#((##/**,%@#%%&&%&&%&@&&&&/*,*,           \n"
						+ "             (%(#%#(%&&&%@&@%....%@,,***(((#(**//(/,,*.%/........(@(%#(/,,,,,**/#/(,,*,/,/#%%&&&%##%&&&#(**,,,          \n"
						+ "              ,((%%%%&&&&@@&(......&,,*,,,..,*/(*,***.%(.........(*%*(//*,,,,,**/**,,((,*(/%%&&@%%#&%%%%(****,          \n"
						+ "              ,*/##&&#%&##&&%.. ....*(,**,,**(/*,**.((,........./(/*/%**(/*,,,,,,*.##,,*//##&&%&%%&#&&%##(*,*           \n"
						+ "               ,,,(*%#((((##&,...... ..*&*...,..,&#/(.........../(*(**/##%%(((%%#/,,,///((##%&###&%##&%%#(/,*           \n"
						+ "               ,,,,*/#//##//%%,... . ....,,,..,,**,,..,,.,.,....*/((##,,**/((/,**/(*///(((##&%&#(#%(#&#(#/,             \n"
						+ "               ,**/##%%#(*(((%#*.....   .............,**/,,,....,#%###(*....,***(//*(//#((##&#%#%&@%#%(%(,              \n"
						+ "                */(,/#%#&////(#*,.,,..  ... .. ....,,/..../.....*%#(/%%/,....,****(*/##/(%#&#%%###%%#(//**,             \n"
						+ "                 *,**/(%%%/(*/%/,,,,............,.,*/,.....,...,*#####&/,,,.,,,/**//(((((((##%%##%%%(//*,,              \n"
						+ "                   ,,/(((%%#*#&(*,........ . ...,*....#&#%#,,,*(#&&&&&%#,,,,,,,*//(/(((//((%##%#%#(((,/                 \n"
						+ "                    /(((/%(*/*/#/,*............,..  . .....*#&%@&&@&%%(*,*,,,**//(//(((/(((%%%##(#/(*,*                 \n"
						+ "                   /%#*/((*/%*%#*,*,,....................../**##&&%%%((*/*///*/((#(#(((/(*##%%&%(**,,,                  \n"
						+ "                  *,,***((((*//%%*...............,...,,.,,,*,*,//(((#(##(#(//**(/(((*(//((&%%%#(/(*,                    \n"
						+ "                  /,,,((,##((%/(%%,.............*/(/*,,/,(%*,,*#%%#####%#(/**/*(((##(////%%#(/#**,,                     \n"
						+ "               .,.,,,,,/*#((,#/%#@@,,..,......,*(%/*(#(##((%%%#(,***///*****/*(((#/((**(%%#*,****                       \n"
						+ "               ,,.,,,*,,*#,*,*((##%&,,,..,.,.,....   .,,*,.,.,,,,((#/***,,*/*/((((((//%&%/(,                            \n"
						+ "                 ,,,....,,,,*(#(###&&#,,...,.,,.........,*(#(/((#/(*/**/(*//(((((/*,((&/***                             \n"
						+ "                             **,/(#(#//#,,,.,,,,........*/////**/(//**/,/*///(((/*#(*/&##//*,*,*,,                      \n"
						+ "                             ,**,,,,,(**///,*,,,...........     ..,...,,,////(/*#///*/&#%&&&%%##%(,,*                   \n"
						+ "                               ,.,.,*%,,,,**//*,... ......    ....,,..,,*/((*(##(/(/*(%#%&#%%#&%%%%//(                  \n"
						+ "                           ,.,.*,/#(**,,,,,,***#/*.... ..  .. ......,*//(*/#((*#/(#(*((((%##%&%%%%&(((///               \n"
						+ "                ,,,,*,**(**...    ...,,,,...,*,,,/#(/**,,,*,,,*****/(/,##((#/((//*/,#(#/(%(#%##%%##%#(((/#(/*/*         \n"
						+ "               ,*/(**(,,..... ........,,,.,,,,,,.,*//(#&%&%(/,*/(##%#(%##((#/(//((((/##((&%###%###%%(##/(#//**,*        \n"
						+ "              ..*///****..... . .........,...,..,,.,,,**(#(##((%###(##(/#/((/,#,//((/((//%&%###%/#(((#(*//(,/**,,       \n"
						+ "               /#(//**/,. .     ..................,,,.,.,,,/**/*(/(/((((*/#/((/(*((*(/*//#%%#(%/%/#(((//**/*.,,,,         ");
	}
}
